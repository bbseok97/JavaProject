package homework;


	//	인터페이스 변수는 public static final 을 생략할 수 있고,이는 상수값으로
	//	인터페이스 메서드는 추상 메서드로 public abstract 를 생략할 수 있다.
	//	타입 메서드명(); 라고 해도 상관없음.
	//	인터페이스 구현체 ToDo 클래스
	
	//	익명 클래스 사용 - 익명 클래스는 이름이 없기 때문에 생성자를 가지지 않고,
	//	호출 및 상속이 불가능
	//	때문에 이미 만들어진 인터페이스나 클래스를 상속 또는 구현해서 만들어지게 됨.
	//	여러 번 사용할 클래스가 아닌 한번만 사용할 클래스에 주로 사용됨.
	//	클래스 내에 메서드를 재정의 하기 용이하여 '함수형 프로그램'과 비슷하게 활용할 수 있음.
	//	인터페이스와 익명 클래스를 같이 사용하면 여러 상황에서 쓰일 수 있는 유틸리티
	//	클래스를 만들어 사용할 수 있음.
	
	//	static 내부 클래스 - static이 붙은 멤버와 동일하게 사용이 가능하다.
	//	이 내부클래스는 static이 붙어 있기 때문에 static이 붙은 멤버에만 접근가능.
	//	접근 방식에 의해서 객체 생성 방법에 차이가 생기게 된다.
	//	static이 없는 멤버 이너클래스는 외부 객체를 생성한 후에 내부 클래스에 접근이 가능.
	//	static이 있는 경우에는 외부 클래스 객체 생성없이 바로 호출 가능.
	
	
	

public class Hw_D01 {

	public static void main(String[] args) {
		

	}

}
