package homework;

public class Hw_C08 {
	
	/*
	 * 	Usage Modifier final
	 * 	의미
	 * 	- 일반적으로 final 그 값이 변하지 않음을 의미한다.
	 * 	
	 * 	- 변수에 final이 붙으면 그 값은 변경할 수 없다.
	 * 		때문에 static하고 같이 사용시 상수로 사용
	 * 	
	 * 	- 메서드에 final이 붙으면 그 메서드는 재정의할 수 없다.
	 * 		재정의 될 필요가 없는 메서드일 때 사용
	 * 		개발자가 재정의를 허용하지 않기 위해서 사용.
	 * 
	 * 	- 클래스에 final이 붙으면 그 클래스는 자식 클래스를 가질 수 없음.
	 * 		부모가 final로 정의한 메서드는 Override 불가 !!
	 */
	
	
	 /*
	  *	다형성(Polymorphism)
	  *  - 여러가지 형태를 가지는 성질을 의미함.
	  *  - 다형성은 상속을 전제조건으로 함.
	  *  - 동일한 메시지라도 어떤 객체에 전달되느냐에 따라서 다양한 동작을 발생
	  * 	이것은 프로그램에서 유연성을 부여하는 역할을 함.
	  * 
	  *  - 다형성은 존재하지 않았던 클래스를 **기존 시스템에 수정없이, 추가되도록 함.
	  * 	(다형성 인자 예제)
	  * 
	  *  - 다형성을 적용하는 방법은 부모클래스의 객체를 선언하고, 자식 클래스의 객체를
	  *  	할당하는 것. 반대의 경우에는 불가능 ! (super > sub O / sub > super X) 
	  * 
	  *  - 다형적 객체의 경우 부모 클래스에 있는 메서드만 사용이 가능함.
	  *  	자식 클래스에 재정의 되어 있다면 실행은 자식클래스에 있는 메서드로 실행
	  * 	자식 클래스의 메서드가 실행된다고 해서 부모 클래스에 있는 해당 메서드를 지우면 안됨.
	  * 	이유는 컴파일 시에는 부모의 메서드를, 실행시에는 자식의 메서드를 사용하기 때문 !!
	  * 
	  *  - 선언 시 자료형은 반드시 구현된 클래스일 필요는 없다.
	  *  	추상 클래스나 인터페이스도 가능하고, 이런 특성을 이용하여 개발자는 인터페이스를
	  *  	통해서 명세를 제공할 수 있음.
	  * 
	  * 
	  */
	
	
	
	
	public static void main(String[] args) {
		

	}

}
