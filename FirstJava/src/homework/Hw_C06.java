package homework;

public class Hw_C06 {

	/*
	 * 	Modifier		same Class		same Package		package & sub Class			Other Package(전체)
	 * ======================================================================================================
	 * 	public				O				O						O							O	
	 * 	protected			O				O						O							X
	 * 	default				O				O						X							X
	 * 	private				O				X						X							X
	 * 
	 * 	접근 제한자는 클래스와 클래스 변수, 메서드, 생성자 등의 접근을 제어할 수 있는 제한자
	 * 	(클래스의 경우에는 public과 default만 가능함.	단, 내부 클래스는 4가지 접근 제한다 모두 가능)
	 */
	
	
	 /*
	  * 	캡슐화(은닉) Encapsulation
	  * 	접근 제한자를 이용하여 접근 제한하는 경우로 
	  * 	- 외부에서 변수에 직접 접근 X
	  * 	- 직접 접근이 안되니 메서드를 통해서 변수의 값을 변경 및 참조
	  * 	
	  * 	Why? 이런 방식을 사용할까?
	  * 	- 잘못된 값(데이터)이 변수의 값이 되는 것을 방지하기 위해서
	  * 	- 접근 권한이 없는 사용자에 의한 데이터 접근을 방지하기 위해서
	  * 
	  * 	어떻게 사용하는가?
	  * 	- 변수 선언 앞에 private 사용
	  * 	- 메서드 선언 앞에는 public (getter/setter)
	  * 	- 기억해야 할 것은 변수뿐만 아니라 클래스 안에서만 사용하는 메서드들에 대해서도
	  * 		private 설정이 가능하고, 이를 외부에서 사용할 때도 동일한 방식으로 사용 가능
	  * 
	  */
	
		//	getter, setter
		// 	getter와 setter 메서드를 활용하면, 데이터를 효과적으로 보호하면서
		//	값을 불러오거나 변경할 수 있다.
	
		//	getter() 메서드
		//	getter 메서드는 설정한 변수 값을 읽어오는데 사용함.
		//	경우에 따라 객체 외부에서 필드 값을 사용하기에 부적절한 경우가 발생할 수 
		//	있는데 이러한 경우에는 값을 가공한 이후에 외부로 전달하는 역할을 한다.
	
		//	setter() 메서드
		//	setter 메서드는 외부에서 메서드에 접근하여 조건에 맞을 경우
		//	데이터 값을 변경할 수 있도록 한다.
	
	
	public static void main(String[] args) {

	}

}
