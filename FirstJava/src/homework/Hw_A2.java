package homework;

public class Hw_A2 {

	public static void main(String[] args) {
		// 타입 캐스팅 : 어떤 변수 혹은 값을 강제로 다른 타입으로 변환
		
		// byte < char <= short < int < long < float < double
		// 일반적으로 큰 타입을 작은 타입에 넣으면 에러가 발생함.
		// ex) int i = f;
		//	   int i = a;
		
		// 타입 캐스팅을 통해서 값을 억지로 넣을 수 있음.
		// 다만, 타입 캐스팅을 하면 값의 손실이 일어날 수 있음을 인지
		
		//ASCII 코드
		//	문자는 각 문자에 해당하는 정수 값을 가지고 있음.
		//	그 정수 값 중에 0~127까지의 값들을 ASCII코드라고 부름.
		// ex) 'A' == 65
		//	   'a' == 97
		// int 타입의 값을 char타입으로 캐스팅하면 해당하는 ASCII코드 문자로 변환
		// 문자끼리도 연산이 가능함.
		// 문자와 정수 사이에도 연산이 가능하다.
		// 더 큰 타입과 연산을 하게 되면, 자동적으로 큰 타입으로 변환
	
	
		// 연산자
		// 산술 연산자(+, -, *, /, %)
		//	- 나누기는 같은 타입인 경우 해당 타입으로 출력
		//	- 실수 타입과 정수가 연산하게 되면, 실수타입으로 출력
		//	- 나머지연산(mod)
		//	- ^는 제곱승 처리가 아닌 비트연산자로 사용
		//	- Math.pow를 사용하여 제곱
		
		// 비교 연산자(boolean타입)
		//	== : 같을 경우 true, 다를 경우 false
		//	!= : 다를 경우 true, 같을 경우 false
		
		// 논리 연산자
		// &&(and) : 좌항과 우항의 값이 모두 true일때 true값을 반환 (논리곱)
		// ||(or) : 좌항과 우항 둘 중 하나라도 true일때 true값 반환(논리합)
		
		// 대입 연산자
		// a = 10;
		// System.out.println(a);
		
		// 복합대입 연산자
		// +=, -=, *=, /=, %=
		// 우항의 값을 좌항에 더하여 대입
		
		// 삼항 연산자
		// 비교조건 ? 참 : 거짓
		// 조건이 true일 경우 참의 값을 반환, false일 경우 거짓 값을 반환
		
		// 단항 연산자
		// a++, a--, ++a, --a
		// a++, a-- (후위연산) 값을 처리한 후 증가
		// ++a, --a (전위연산) 값을 증가시킨 후에 처리
	
		// !(NOT) : boolean 타입에서 사용
		
		// ~ : 비트 반전
		
		// 비트연산
		// 이진법으로 계산하는 연산
		//	&, |, >>, <<, ^ ...
	
	
	}

}
